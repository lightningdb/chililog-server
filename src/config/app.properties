#
# APPLICATION CONFIGURATION FILE
#

#************************************************************************
# mongoDB Database
#************************************************************************
# IP address or host name of mongoDB server
db.ip_address=localhost

# The ip port to use to connect to the mongoDB server. Defaults to 27017
db.ip_port=

# Name of mongoDB database to use
db.name=chililog

# Username for mongoDB authentication 
db.username=chililog

# Password for mongoDB authentication
db.password=chililog12

# Number of connections per host. Defaults to 10
db.connections_per_host=10


#************************************************************************
# HornetQ Message Queue
#************************************************************************
# Username/Password of trusted internal system user for managing the different components of the system
# You should only ever need to set username and password in a load balanced environment
# By default, a random username and password is generated if it is left empty 
mq.system_username=
mq.system_password=

# true/false flag to indicate if we want to save messages to disk
mq.journalling_enabled=false

# Directory where journals files will be stored
mq.journal_directory=../data/journal

# Directory where paging files will be stored
mq.paging_directory=../data/paging

# The time period in milliseconds during which an authenticated user is valid and credentials will not be validated.
# Default is 10000 milliseconds (10 seconds) for performance reasons.
mq.security_invalidation_interval=10

# true/false flag to indicate if we wish to perform clustering
# if true, then jaas.system_username and jaas.system_password will be used as the clustered username and password
mq.clustered_enabled=false

# The number of times a message will attempt to be re-delivered before it is deleted or moved to the dead letter queue
mq.redelivery.max_attempts=3

# The number of milliseconds to wait before each re-delivery.  This needed to prevent thrashing
mq.redelivery.delay_milliseconds=3000

# The address to put undelivered messages. If not specified, messages are deleted after max_attempts.
mq.dead_letter_address=dead_letters

#************************************************************************
# PubSub Services
#************************************************************************
# HornetQ core tcp/ip protocol
# See HornetQ documentation 16.4.1. Configuring Netty TCP for details
pubsub.core.enabled=true
pubsub.core.use-nio=true
pubsub.core.host=
pubsub.core.port=5445
pubsub.core.tcp-no-delay=
pubsub.core.tcp-send-buffer-size=
pubsub.core.tcp-receive-buffer-size=
pubsub.core.batch-delay=
pubsub.core.direct-deliver=
pubsub.core.nio-remoting-threads=

pubsub.core.ssl-enabled=
pubsub.core.key-store-path=
pubsub.core.key-store-password=
pubsub.core.trust-store-path=
pubsub.core.trust-store-password=

pubsub.core.http-enabled=
pubsub.core.http-client-idle-time=
pubsub.core.http-client-idle-scan-period=
pubsub.core.http-response-time=
pubsub.core.http-server-scan-period=
pubsub.core.http-requires-session-id=

# Support pubsub using JSON over HTTP
pubsub.json-http.enabled=true
pubsub.json-http.host=0.0.0.0
pubsub.json-http.port=61615

pubsub.json-http.ssl-enabled=false
pubsub.json-http.key-store-path=
pubsub.json-http.key-store-password=
pubsub.json-http.trust-store-path=
pubsub.json-http.trust-store-password=

pubsub.json-http.netty_worker_thread_pool.size=
pubsub.json-http.netty_handler_thread_pool.size=16

#************************************************************************
# Workbench Service
#************************************************************************
# if 'true' for workbench to be available, 'false' otherwise.
workbench.enabled=true

# host ip address to which to bind. 
# Can specify "0.0.0.0" which means any address
# Can also specify comma separated hostnames/ip address. e.g. localhost,192.168.1.1  
workbench.host=localhost

# host port to listen on 
workbench.port=8989

# number of netty workers handling channels. Defaults to 2 x the number of cores.
workbench.netty_worker_thread_pool.size=

# maximum number of active threads to execute our netty handler
workbench.netty_handler_thread_pool.size=16

# maximum total memory size of the queued events per channel (0 to disable). Defaults to 0.
workbench.netty_handler_thread_pool.max_channel_memory_size=

# maximum total memory size of the queued events for this pool (0 to disable). Defaults to 0.
workbench.netty_handler_thread_pool.max_total_memory_size=

# amount of time for an inactive handler thread before it is shutdown. Defaults to 3.
workbench.netty_handler_thread_pool.keep_alive_seconds=

# true/false flag indicating if SSL is to be used
# We recommend that SSL processing is off loaded to a load balancer or a proxy web server.
workbench.ssl_enabled=false
workbench.key_store_path=
workbench.key_store_password=
workbench.key_store_key_password=
workbench.trust_store_path=
workbench.trust_store_password=

# Path to static file directory
workbench.static_files.directory=../workbench

# Number of seconds to cache contents
# Set cache duration to 24 hours. Some proxies think expiry > 1 year is an error 
# See http://wiki.sproutcore.com/w/page/12412888/Deployment-Introduction
workbench.static_files.cache_seconds=86400

# Salt to use when hashing the authentication ticket 
workbench.api.authentication.hash_salt=J12*#3HGds

# Password to use when encrypting/decrypting an authentication ticket 
workbench.api.authentication.encyrption_password=dfg23?$%JXjkdregfm;34&^

#************************************************************************
# Miscellaneous
#************************************************************************
# Set to true to make all JSON output human readable. False will eliminate whitespace. 
json.pretty=false

