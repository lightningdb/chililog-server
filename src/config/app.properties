##
## CHILILOG OVERRIDE APPLICATION CONFIGURATION FILE
##
## Uncomment and put your own settings in here
##

##************************************************************************
## mongoDB Database
##************************************************************************
## IP address or host name of mongoDB server
#db.ip_address=localhost

## The ip port to use to connect to the mongoDB server. Defaults to 27017
#db.ip_port=

## Name of mongoDB database to use
#db.name=chililog

## Username for mongoDB authentication 
#db.username=chililog

## Password for mongoDB authentication
#db.password=chililog12

## Number of connections per host. Defaults to 10
#db.connections_per_host=10


##************************************************************************
## HornetQ Message Queue
##************************************************************************
## Username/Password of trusted internal system user for managing the different components of the system
## You should only ever need to set username and password in a load balanced environment
## By default, a random username and password is generated if it is left empty 
#mq.system_username=
#mq.system_password=

## true/false flag to indicate if we want to save messages to disk
#mq.journalling_enabled=false

## Directory where journals files will be stored
#mq.journal_directory=${mq.journal_directory}

## Directory where paging files will be stored
#mq.paging_directory=${mq.paging_directory}

## true/false flag to indicate if we wish to perform clustering
## if true, then jaas.system_username and jaas.system_password will be used as the clustered username and password
#mq.clustered_enabled=false

## The number of times a message will attempt to be re-delivered before it is deleted or moved to the dead letter queue
#mq.redelivery.max_attempts=3

## The number of milliseconds to wait before each re-delivery.  This needed to prevent thrashing
#mq.redelivery.delay_milliseconds=3000

## Configuration of the Message Queue support for the JMS and HornetQ core protocol
## See HornetQ documentation 16.4.1. Configuring Netty TCP for details
#mq.protocol.core.enabled=true
#mq.protocol.core.use-nio=
#mq.protocol.core.host=
#mq.protocol.core.port=5445
#mq.protocol.core.tcp-no-delay=
#mq.protocol.core.tcp-send-buffer-size=
#mq.protocol.core.tcp-receive-buffer-size=
#mq.protocol.core.batch-delay=
#mq.protocol.core.direct-deliver=
#mq.protocol.core.nio-remoting-threads=

#mq.protocol.core.ssl-enabled=
#mq.protocol.core.key-store-path=
#mq.protocol.core.key-store-password=
#mq.protocol.core.trust-store-path=
#mq.protocol.core.trust-store-password=

#mq.protocol.core.http-enabled=
#mq.protocol.core.http-client-idle-time=
#mq.protocol.core.http-client-idle-scan-period=
#mq.protocol.core.http-response-time=
#mq.protocol.core.http-server-scan-period=
#mq.protocol.core.http-requires-session-id=

## Configuration of the Message Queue support for the STOMP (web socket) protocol
## See HornetQ documentation 16.4.1. Configuring Netty TCP for details
#mq.protocol.stomp.enabled=true
#mq.protocol.stomp.use-nio=
#mq.protocol.stomp.host=
#mq.protocol.stomp.port=61613
#mq.protocol.stomp.tcp-no-delay=
#mq.protocol.stomp.tcp-send-buffer-size=
#mq.protocol.stomp.tcp-receive-buffer-size=
#mq.protocol.stomp.batch-delay=
#mq.protocol.stomp.direct-deliver=
#mq.protocol.stomp.nio-remoting-threads=

#mq.protocol.stomp.ssl-enabled=
#mq.protocol.stomp.key-store-path=
#mq.protocol.stomp.key-store-password=
#mq.protocol.stomp.trust-store-path=
#mq.protocol.stomp.trust-store-password=

#mq.protocol.stomp.http-enabled=
#mq.protocol.stomp.http-client-idle-time=
#mq.protocol.stomp.http-client-idle-scan-period=
#mq.protocol.stomp.http-response-time=
#mq.protocol.stomp.http-server-scan-period=
#mq.protocol.stomp.http-requires-session-id=

## Configuration of the Message Queue support for the STOMP-WS (web socket) protocol
## See HornetQ documentation 16.4.1. Configuring Netty TCP for details
#mq.protocol.stomp-ws.enabled=false
#mq.protocol.stomp-ws.use-nio=
#mq.protocol.stomp-ws.host=
#mq.protocol.stomp-ws.port=61614
#mq.protocol.stomp-ws.tcp-no-delay=
#mq.protocol.stomp-ws.tcp-send-buffer-size=
#mq.protocol.stomp-ws.tcp-receive-buffer-size=
#mq.protocol.stomp-ws.batch-delay=
#mq.protocol.stomp-ws.direct-deliver=
#mq.protocol.stomp-ws.nio-remoting-threads=

#mq.protocol.stomp-ws.ssl-enabled=
#mq.protocol.stomp-ws.key-store-path=
#mq.protocol.stomp-ws.key-store-password=
#mq.protocol.stomp-ws.trust-store-path=
#mq.protocol.stomp-ws.trust-store-password=

##************************************************************************
## HTTP Web Server 
##************************************************************************
## host ip address to which to bind
#web.ip_address=localhost

## host port to listen on 
#web.ip_port=8989

## true/false flag indicating if SSL is to be used
## We recommend that SSL processing is off loaded to a load balancer or a proxy web server.
#web.ssl_enabled=false
#web.key_store_path=
#web.key_store_password=
#web.key_store_key_password=
#web.trust_store_path=
#web.trust_store_password=

## Path to static file directory
#web.static_files.directory=${web.static_files.directory}

## Number of seconds to cache contents
#web.static_files.cache_seconds=${web.static_files.cache_seconds}

## Salt to use when hashing the authentication ticket 
#web.api.authentication.hash_salt=J12*#3HGds

## Password to use when encrypting/decripting an authentication ticket 
#web.api.authentication.encyrption_password=dfg23?$%JXjkdregfm;34&^

##************************************************************************
## Miscellaneous
##************************************************************************
## Set to true to make all JSON output human readable. False will eliminate whitespace. 
#json.pretty=${json.pretty}

