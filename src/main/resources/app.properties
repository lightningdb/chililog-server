#
# APPLICATION CONFIGURATION FILE
#

#************************************************************************
# Application Identification
#************************************************************************
# Name of this application
application.name=${pom.name}

# Version of this app
application.version=${pom.version}

# When the build was performed
build.timestamp=${build.timestamp}

# The name of the machine on which the build was run
build.machinename=${build.machinename}

# The name of the user account used to perform the build
build.username=${build.username}

#************************************************************************
# mongoDB Database
#************************************************************************
# IP address or host name of mongoDB server
db.ip_address=localhost

# The ip port to use to connect to the mongoDB server. Defaults to 27017
db.ip_port=

# Name of mongoDB database to use
db.name=chililog

# Username for mongoDB authentication 
db.username=chililog

# Password for mongoDB authentication
db.password=chililog12

# Number of connections per host. Defaults to 10
db.connections_per_host=10


#************************************************************************
# HornetQ Message Queue
#************************************************************************
# Username/Password of trusted internal system user for managing the different components of the system
# You should only ever need to set username and password in a load balanced environment
# By default, a random username and password is generated if it is left empty 
mq.system_username=
mq.system_password=

# true/false flag to indicate if we want to save messages to disk
mq.journalling_enabled=false

# Directory where journals files will be stored
mq.journal_directory=${mq.journal_directory}

# Directory where paging files will be stored
mq.paging_directory=${mq.paging_directory}

# The time period in milliseconds during which an authenticated user is valid and credentials will not be validated.
# Default is 10000 milliseconds (10 seconds) for performance reasons.
mq.security_invalidation_interval=${mq.security_invalidation_interval}

# true/false flag to indicate if we wish to perform clustering
# if true, then jaas.system_username and jaas.system_password will be used as the clustered username and password
mq.clustered_enabled=false

# The number of times a message will attempt to be re-delivered before it is deleted or moved to the dead letter queue
mq.redelivery.max_attempts=3

# The number of milliseconds to wait before each re-delivery.  This needed to prevent thrashing
mq.redelivery.delay_milliseconds=3000

# The address to put undelivered messages. If not specified, messages are deleted after max_attempts.
mq.dead_letter_address=dead_letters

#************************************************************************
# PubSub Services
#************************************************************************
# HornetQ core tcp/ip protocol
# See HornetQ documentation 16.4.1. Configuring Netty TCP for details
pubsub.core.enabled=true
pubsub.core.use-nio=true
pubsub.core.host=
pubsub.core.port=5445
pubsub.core.tcp-no-delay=
pubsub.core.tcp-send-buffer-size=
pubsub.core.tcp-receive-buffer-size=
pubsub.core.batch-delay=
pubsub.core.direct-deliver=
pubsub.core.nio-remoting-threads=

pubsub.core.ssl-enabled=
pubsub.core.key-store-path=
pubsub.core.key-store-password=
pubsub.core.trust-store-path=
pubsub.core.trust-store-password=

pubsub.core.http-enabled=
pubsub.core.http-client-idle-time=
pubsub.core.http-client-idle-scan-period=
pubsub.core.http-response-time=
pubsub.core.http-server-scan-period=
pubsub.core.http-requires-session-id=

# HornetQ Stomp over tcp/ip sockets protocol
# See HornetQ documentation 16.4.1. Configuring Netty TCP for details
pubsub.stomp.enabled=true
pubsub.stomp.use-nio=
pubsub.stomp.host=
pubsub.stomp.port=61613
pubsub.stomp.tcp-no-delay=
pubsub.stomp.tcp-send-buffer-size=
pubsub.stomp.tcp-receive-buffer-size=
pubsub.stomp.batch-delay=
pubsub.stomp.direct-deliver=
pubsub.stomp.nio-remoting-threads=

pubsub.stomp.ssl-enabled=false
pubsub.stomp.key-store-path=
pubsub.stomp.key-store-password=
pubsub.stomp.trust-store-path=
pubsub.stomp.trust-store-password=

pubsub.stomp.http-enabled=false
pubsub.stomp.http-client-idle-time=
pubsub.stomp.http-client-idle-scan-period=
pubsub.stomp.http-response-time=
pubsub.stomp.http-server-scan-period=
pubsub.stomp.http-requires-session-id=

# HornetQ Stomp web services protocol
# See HornetQ documentation 16.4.1. Configuring Netty TCP for details
pubsub.stomp-ws.enabled=false
pubsub.stomp-ws.use-nio=
pubsub.stomp-ws.host=
pubsub.stomp-ws.port=61614
pubsub.stomp-ws.tcp-no-delay=
pubsub.stomp-ws.tcp-send-buffer-size=
pubsub.stomp-ws.tcp-receive-buffer-size=
pubsub.stomp-ws.batch-delay=
pubsub.stomp-ws.direct-deliver=
pubsub.stomp-ws.nio-remoting-threads=

pubsub.stomp-ws.ssl-enabled=false
pubsub.stomp-ws.key-store-path=
pubsub.stomp-ws.key-store-password=
pubsub.stomp-ws.trust-store-path=
pubsub.stomp-ws.trust-store-password=

# Support publishing JSON over HTTP
pubsub.json-http.enabled=false
pubsub.json-http.use-nio=
pubsub.json-http.host=
pubsub.json-http.port=61615
pubsub.json-http.tcp-no-delay=
pubsub.json-http.tcp-send-buffer-size=
pubsub.json-http.tcp-receive-buffer-size=
pubsub.json-http.batch-delay=
pubsub.json-http.direct-deliver=
pubsub.json-http.nio-remoting-threads=

pubsub.json-http.ssl-enabled=false
pubsub.json-http.key-store-path=
pubsub.json-http.key-store-password=
pubsub.json-http.trust-store-path=
pubsub.json-http.trust-store-password=

# Support publishing JSON over HTTP
pubsub.json-ws.enabled=false
pubsub.json-ws.use-nio=
pubsub.json-ws.host=
pubsub.json-ws.port=61616
pubsub.json-ws.tcp-no-delay=
pubsub.json-ws.tcp-send-buffer-size=
pubsub.json-ws.tcp-receive-buffer-size=
pubsub.json-ws.batch-delay=
pubsub.json-ws.direct-deliver=
pubsub.json-ws.nio-remoting-threads=

pubsub.json-ws.ssl-enabled=false
pubsub.json-ws.key-store-path=
pubsub.json-ws.key-store-password=
pubsub.json-ws.trust-store-path=
pubsub.json-ws.trust-store-password=

#************************************************************************
# Management Service
#************************************************************************
# host ip address to which to bind
management.ip_address=localhost

# host port to listen on 
management.ip_port=8989

# maximum number of active threads to execute tasks
management.task_thread_pool.size=16

# maximum total size of the queued events per channel (0 to disable).
management.task_thread_pool.max_channel_memory_size=1048576

# maximum total size of the queued events for this pool (0 to disable).
management.task_thread_pool.max_thread_memory_size=1048576

# amount of time for an inactive thread to shut itself down
management.task_thread_pool.keep_alive_seconds=30

# true/false flag indicating if SSL is to be used
# We recommend that SSL processing is off loaded to a load balancer or a proxy web server.
management.ssl_enabled=false
management.key_store_path=
management.key_store_password=
management.key_store_key_password=
management.trust_store_path=
management.trust_store_password=

# Path to static file directory
management.static_files.directory=${web.static_files.directory}

# Number of seconds to cache contents
management.static_files.cache_seconds=${web.static_files.cache_seconds}

# Salt to use when hashing the authentication ticket 
management.api.authentication.hash_salt=J12*#3HGds

# Password to use when encrypting/decrypting an authentication ticket 
management.api.authentication.encyrption_password=dfg23?$%JXjkdregfm;34&^

#************************************************************************
# Miscellaneous
#************************************************************************
# Set to true to make all JSON output human readable. False will eliminate whitespace. 
json.pretty=${json.pretty}

